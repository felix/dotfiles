#!/usr/bin/env python3

import argparse
import os
import subprocess
import sys


def main(argv):
    parser = argparse.ArgumentParser(
        description="pass-store credential helper")
    parser.add_argument("--full-host", action="store_true",
                        help="Send full host provided by git to pass")
    parser.add_argument("command")
    args = parser.parse_args(argv)

    if not args.command == 'get':
        raise SystemExit(0)

    pass_name = get_host(args.full_host)

    if pass_name is None:
        raise SystemExit("Could not determine host")
    elif not pass_name:
        raise SystemExit(0)

    try:
        output = subprocess.check_output(['pass', 'show', pass_name]).decode()
    except subprocess.CalledProcessError as e:
        raise SystemExit(e.returncode)

    username, password = get_creds(output)

    print("password={}\nusername={}".format(password, username))


def get_creds(output):
    username = None
    password = None
    for line in output.split('\n'):
        try:
            key, value = line.split(':')
            if key == 'pat' or key == 'token':
                password = value.strip()
            elif key == 'login' or key == 'user':
                username = value.strip()
        except ValueError:
            pass
    if not username:
        username = os.environ['USER']
    return username, password


def get_host(full_host):
    host = None
    for line in sys.stdin.readlines():
        try:
            key, value = line.split('=')
            if key == 'host':
                host = value.strip()
                if not full_host:
                    host = host.split('.')[0]
                return host
        except ValueError:
            pass
    return host


if __name__ == '__main__':
    main(sys.argv[1:])
